// This is a Javascript test harness that simulates the execution of Lambda function code
// From the command prompt, type "node test.js"

var MyLambdaFunction = require('../src/index.js'); // assumes single Lambda function with exports.handler

 // this is the Lambda request data, generated by the Alexa service.  Replace with your actual Alexa request.
var launchRequest = 
{
    "session": {
        "sessionId": "SessionId.f9e6dcbb-b7da-4b47-905c.etc.etc",
        "application": {
            "applicationId": "amzn1.ask.skill.421645aa-84de-4f10-bf8a-c855e7b4df5f"
        },
        "attributes": {},
        "user": {
            "userId": "amzn1.ask.account.VO3PVTGF563MOPBY.etc.etc"
        },
        "new": true
    },
    "request": {
        "type": "LaunchRequest",

        "requestId": "request5678",

        "locale": "en-US"
    },

    "version": "1.0"
};

var getLocationEvent =
{
    "session": {
        "sessionId": "SessionId.f9e6dcbb-b7da-4b47-905c.etc.etc",
        "application": {
            "applicationId": "amzn1.ask.skill.421645aa-84de-4f10-bf8a-c855e7b4df5f"
        },
        "attributes": {},
        "user": {
            "userId": "amzn1.ask.account.VO3PVTGF563MOPBY.etc.etc"
        },
        "new": true
    },
    "request": {
        "type": "IntentRequest",

        "requestId": "request5678",

        "locale": "en-US",

        "intent": {
            "name": "GetLocationIntent",
            "slots": {
                "City": {
                  "name": "City",
                  "value": "Seattle"
                },
                "Street": {
                  "name": "Street"
                },
                "Business": {
                  "name": "Business",
                  "value": "Costco pharmacy"
                },
            }
        }
    },
    "version": "1.0"
};

var intentEvent =
{
  "session": {
    "sessionId": "SessionId.d0bd91c7-8b3e-4b37-ab16-4a2961d3cf49",
    "application": {
      "applicationId": "amzn1.ask.skill.421645aa-84de-4f10-bf8a-c855e7b4df5f"
    },
    "attributes": {},
    "user": {
      "userId": "amzn1.ask.account.AH24FR25N77EY2A3TAUGPBPMJ6UGJWRNH54EOLAIQROURLVY2ZFVBAD5V56CBYG2FQ3WFH3C7VPJLIXPAICSR7U5T2FFXH56BUB5KIB6HMYUERGDDZJS7FMTIGP7UTKJNVOMKQ5ECCLTENCI2TZDXYR25L63ENZEBTDDLBFMSN7DUJ3CKNJHSAHABRSRSQ2HJRYMLTNHQBJVBFI"
    },
    "new": true
  },
  "request": {
    "type": "IntentRequest",
    "requestId": "EdwRequestId.502f54f4-67eb-49f2-bc79-a743606e2be4",
    "locale": "en-US",
    "timestamp": "2017-03-24T00:06:32Z",
    "intent": {
      "name": "AMAZON.SearchAction<object@LocalBusiness[openHours]>",
      "slots": {
        "object.location.name": {
          "name": "object.location.name",
          "value": "Gilman"
        },
        "object.name": {
          "name": "object.name"
        },
        "object.location.streetAddress.name": {
          "name": "object.location.streetAddress.name"
        },
        "object.openHours.opens": {
          "name": "object.openHours.opens"
        },
        "object.openHours.closes": {
          "name": "object.openHours.closes",
          "value": ""
        },
        "object.type": {
          "name": "object.type",
          "value": "QFC pharmacy"
        },
        "object.location.addressLocality.name": {
          "name": "object.location.addressLocality.name"
        },
        "object.spatialRelation": {
          "name": "object.spatialRelation"
        },
        "object.openHours.type": {
          "name": "object.openHours.type"
        },
        "object.location.addressRegion.name": {
          "name": "object.location.addressRegion.name"
        }
      }
    }
  },
  "version": "1.0"
};

var context = {
    'succeed': function (data) {
        console.log(JSON.stringify(data, null,'\t') );

    },
    'fail': function (err) {
        console.log('context.fail occurred');
        console.log(JSON.stringify(err, null,'\t') );
    }

};

function callback(error, data) {
    if(error) {
        console.log('error: ' + error);
    } else {
        console.log(data);
    }
}

// call the function
// MyLambdaFunction['handler'] (launchRequest, context, callback);
MyLambdaFunction['handler'] (getLocationEvent, context, callback);
// MyLambdaFunction['handler'] (intentEvent, context, callback);
